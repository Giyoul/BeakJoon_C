/*
	팩토리을 구하기 위해 recursion을 쓰지 않겠다.
	너무 느리다.
	차라리 for문으로 더하고 말지
*/
#include <iostream>
using namespace std;

int main(){
	ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	
	/* 
		num의 최댓값이 500이라 500!은 무한대에 가깝다.
	 	따라서 펙토리알을 구하고 0의 개수를 세는 것은 불가능하다.
	 	이러면 수학 문제가 되는데, 규칙을 찾아보면, 5의 배수의 펙토리알마다 0의 개수가 하나씩 늘어난다.
		그 이유는
		5!에서 5*2로 10이 하나,
		10!에서 위의 10 하나 * 10 이라서 100이 하나
		15!에서 위의 100이 하나 * 15 * (2의 배수 아무거나)이라서 1000이 하나이기 때문이다.
		20!에서 위의 1000이 하나 * 20 이라서 10000이 하나
		근데 25!의 경우에 위의 10000이 하나 있고 거기에 25 * (2의 배수 아무거나)이라서 100000이지만, 25는 5 * 5 이므로 이는 5*(2의 배수 아무거나) * 2이므로 1000000이다
		
		즉, 5의 배수가 나올때 마다 합이 되야한다.
		이를 감안해서 코드를 짜보면
	*/
	int num;
	int ans = 0;
	
	cin >> num;
	
	for(int i = 5; i <= num; i*=5){
		ans += num / i;
	}
		
	cout << ans;
}